cmdhistory=["(+ 1 1)" "(ns)" "ns" "(ns 'api-quiz-core)" "(ns api-quiz-core)" "(app)" "(in-ns)" "*ns*" "(in-ns 'api-quiz.core)" "(boot)" "(app)" "*ns*" "(app)" "(*ns*)" "*ns*" "(run-jetty api-routes {\:port 8080})" "(read-string \\"0\\")" "(read-string \\"10\\")" "(run-jetty api-routes {\:port 8080})" "(bigint 200000)" "(biginteger 200000)" "(biginteger \\"200000\\")" "1" "(1)" "1" "(bigint 1)" "(bigint \\"1\\")" "(bigint \\"200\\")" "(biginteger \\"200\\")" "(biginteger \\"200000000\\")" "(ns api-quiz.core\\n (\:gen-class)\\n (\:use compojure.core)\\n (\:use ring.adapter.jetty)\\n (\:use api-quiz.fibonacci)\\n (\:require [compojure.route \:as route]))\\n\\n(defroutes api-routes\\n  (GET \\"/\\" [] {\:status 200})\\n  (GET \\"/fib/\:num\\" [num] (str (fib-iter (biginteger num))))\\n  (POST \\"/store/\:val\\" [val] (str \\"post test val was \\" val))\\n  (route/not-found \\"Page not found\\"))\\n\\n(defn -main [& args]\\n  (run-jetty api-routes {\:port 8080}))" "(run-jetty api-routes {\:port 8080})" "(json/write-str \#{\:a 1})" "(json/write-str {\:a 1})" "(sha1 \\"test\\")" "(ns api-quiz.core\\n (\:gen-class)\\n (\:use compojure.core)\\n (\:use ring.adapter.jetty)\\n (\:use api-quiz.fibonacci)\\n (\:require [compojure.route \:as route]\\n           [clojure.data.json \:as json])\\n (\:import (java.security MessageDigest)))\\n \\n (defn sha1 [obj]\\n  (let [bytes (.getBytes (with-out-str (pr obj)))] \\n    (apply vector (.digest (MessageDigest/getInstance \\"SHA1\\") bytes))))\\n \\n (defn hash-node [node replicas]\\n  (map \#(hash-map (sha1 (str node %)) node) (range replicas)))\\n\\n(defn json-response [data & [status]]\\n  {\:status (or status 200)\\n   \:headers {\\"Content-Type\\" \\"application/json\\"}\\n   \:body (json/write-str {\:response data})})\\n\\n(defroutes api-routes\\n  (GET \\"/\\" [] {\:status 200})\\n  (GET \\"/fib/\:num\\" [num] (json-response (fib-iter (biginteger num))))\\n  (POST \\"/store/\:val\\" [val] (str \\"post test val was \\" val))\\n  (route/not-found \\"Page not found\\"))\\n\\n(defn -main [& args]\\n  (run-jetty api-routes {\:port 8080}))" "(.digest (MessageDigest/getInstance \\"SHA1\\") \\"rofl\\")" "(ns api-quiz.core\\n (\:gen-class)\\n (\:use compojure.core)\\n (\:use ring.adapter.jetty)\\n (\:use api-quiz.fibonacci)\\n (\:require [compojure.route \:as route]\\n           [clojure.data.json \:as json])\\n (\:import (java.security MessageDigest)))\\n \\n(defn get-hash [type data]\\n  (.digest (MessageDigest/getInstance type) (.getBytes data) ))\\n\\n(defn sha1-hash [data]\\n  (get-hash \\"sha1\\" data))\\n\\n(defn get-hash-str [data-bytes]\\n  (apply str \\n\\t(map \\n\\t\\t\#(.substring \\n\\t\\t\\t(Integer/toString \\n\\t\\t(+ (bit-and % 0xff) 0x100) 16) 1) \\n\\t\\tdata-bytes)))\\n\\n\\n(defn json-response [data & [status]]\\n  {\:status (or status 200)\\n   \:headers {\\"Content-Type\\" \\"application/json\\"}\\n   \:body (json/write-str {\:response data})})\\n\\n(defroutes api-routes\\n  (GET \\"/\\" [] {\:status 200})\\n  (GET \\"/fib/\:num\\" [num] (json-response (fib-iter (biginteger num))))\\n  (POST \\"/store/\:val\\" [val] (str \\"post test val was \\" val))\\n  (route/not-found \\"Page not found\\"))\\n\\n(defn -main [& args]\\n  (run-jetty api-routes {\:port 8080}))" "(sha1-hash \\"rofl\\")" "(get-hash-str (sha1-hash \\"rofl\\"))" "(sha1 \\"test\\")" "*ns*" "(in-ns 'api-quiz.core)" "*ns*" "(sha1 \\"test\\")"]
eclipse.preferences.version=1
